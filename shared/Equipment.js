/**
 * Created by Jerome on 12-12-17.
 */

var onServer = (typeof window === 'undefined');

var Equipment = {
    dict: {
        meleew:{
            nb: 1,
            x: 100,
            y: 115,
            shade: 'sword',
            name: 'Melee weapon',
            desc: 'Weapon used to fight opponents on adjacent battle positions. Influences the Melee damage stat. Not compatible with a ranged weapon.',
            conflict: 'rangedw',
            showInBattle: true,
            battlex: 10,
            battley: 10
        },
        rangedw:{
            nb: 1,
            x: 100,
            y: 65,
            shade: 'gun',
            name: 'Ranged weapon',
            desc: 'Weapon used to fight opponents on non-adjacent battle positions. Not compatible with a melee weapon. Influences the Accuracy stat. Bows tend to be more accurate than guns, but arrows tend to deal less damage than bullets.',
            conflict: 'meleew',
            showInBattle: true,
            battlex: 10,
            battley: 50
        },
        shield:{
            nb: 1,
            x: 200,
            y: 65,
            shade: 'shield',
            name: 'Shield',
            desc: 'Protection automatically used to decrease both melee and ranged damage from opponents. Influences the Defense stat.',
        },
        armor:{
            nb: 1,
            x: 150,
            y: 50,
            shade: 'armor',
            name: 'Armor',
            desc: 'Main defensive equipment, decreases both melee and ranged damage from opponents. Influences the Defense stat.'
        },
        belt:{
            nb: 1,
            x: 150,
            y: 100,
            shade: 'belt',
            name: 'Belt',
            desc: 'In the future, will have an impact on the amount of consumable items usable in battle.'
        },
        boots:{
            nb: 1,
            x: 150,
            y: 150,
            shade: 'boots',
            name: 'Boots',
            desc: 'In the future, will have an impact on the fatigue generated by walking.'
        },
        necklace:{
            nb: 1,
            x: 200,
            y: 15,
            shade: 'necklace',
            name: 'Necklace',
            desc: 'Accessory which can have a variety of different effects.'
        },
        acc:{
            nb: 2,
            x: 270,
            y: 150,
            shade: 'ring',
            xincrement: 40,
            name: 'Accessory',
            desc: 'Accessory which can have a variety of different effects.'
        },
        quiver:{
            nb: 1,
            x: 270,
            y: 50,
            shade: 'quiver',
            name: 'Quiver',
            desc: 'Container for arrows, to be used with a bow. Quivers can have different capacities.',
            container: true,
            contains: 'arrows',
            showInBattle: true,
            battlex: 60,
            battley: 10
        },
        ammo_pouch:{
            nb: 1,
            x: 270,
            y: 100,
            shade: 'ammo-pouch',
            name: 'Bullets pouch',
            desc: 'Container for bullets, to be used with a gun. Pouches can have different capacities.',
            container: true,
            contains: 'bullets',
            showInBattle: true,
            battlex: 60,
            battley: 50
        },
        arrows:{
            nb: 1,
            x: 310,
            y: 50,
            shade: 'arrow',
            name: 'Arrows',
            desc: 'Ammunition type used by bows. Only one type of arrow can be equipped at any given time. If the number of arrows is yellow, it means that the quiver is full.',
            containedIn: 'quiver',
            showInBattle: true,
            battlex: 100,
            battley: 10
        },
        bullets:{
            nb: 1,
            x: 310,
            y: 100,
            shade: 'bullets',
            name: 'Bullets',
            desc: 'Ammunition type used by guns. Only one type of bullets can be equipped at any given time. If the number of bullets is yellow, it means that the pouch is full.',
            containedIn: 'ammo_pouch',
            showInBattle: true,
            battlex: 100,
            battley: 50
        }
    }
};

// Returns a data structure to store data related to equipment
Equipment.getSkeleton = function(){
    var skeleton = {
        containers: {}
    };
    for(var equip in Equipment.dict){
        if(!Equipment.dict.hasOwnProperty(equip)) continue;
        var sl = [];
        for(var i = 0; i < Equipment.dict[equip].nb; i++){
            sl.push(-1);
        }
        skeleton[equip] = sl;
        if(Equipment.dict[equip].container){
            skeleton.containers[equip] = 0;
        }
    }
    return skeleton;
};

if (onServer) module.exports.Equipment = Equipment;